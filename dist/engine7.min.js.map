{"version":3,"sources":["engine7.js"],"names":["window","Engine7","isNull","str","undefined","ajax","url","method","params","successCB","errorCB","$","type","dataType","data","success","error","encodeJSON","json","key","encodeURIComponent","Request","element","req","this","tpl","dom","context","invoke","urlTemplate","Template7","compile","paramsTemplate","eval","e","console","Error","id","status","$context","render","xhr","init","tplId","attr","ATTR_TPL_ID","ATTR_METHOD","engine","templates","ATTR_REF","ATTR_URL","ATTR_PARAMS","Template","src","srcTemplate","html","els","reqdoms","filter","append","each","ATTR_CACHED","requests","invokeAll","i","length","_initTemplates","template","_initRequests","request","push","e7"],"mappings":"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","file":"engine7.min.js","sourcesContent":["/**\n * engine7 \n * \n * \n * http://www.engine7.com\n * \n * Copyright 2017, Jeffrey King\n * \n * Licensed under MIT\n * \n * Released on: March 28, 2017\n */\nwindow.Engine7 = (function() {\n    'use strict';\n\n    function isNull(str) {\n        return str === null || str === \"\" || str === undefined;\n    }\n\n    function ajax(url, method, params, successCB, errorCB) {\n        return $.ajax({\n            url : url,\n            type : method,\n            dataType: \"json\",\n            data: params,\n            success : successCB,\n            error : errorCB\n        });\n    }\n\n    function encodeJSON(json){\n        for (var key in json) {\n            json[key] = encodeURIComponent(json[key]);\n        }\n        return json;\n    }\n\n\n    function Engine7(){\n        var engine = this;\n\n        var ATTR_TPL_ID = \"data-tpl-id\";\n        var ATTR_URL = \"data-api-url\";\n        var ATTR_METHOD = \"data-api-method\";\n        var ATTR_PARAMS = \"data-api-param\";\n        var ATTR_CACHED = \"data-api-cached\";\n        var ATTR_REF = \"data-tpl-ref\";\n\n        function Request(element){\n            var req = this;\n            this.url = null;\n            this.params = null;\n            this.method = \"GET\";\n            this.tpl = null;\n            this.dom = null;\n            this.context = {};\n            this.invoke = function(){\n\n                var urlTemplate = Template7.compile(req.url);\n                var url = urlTemplate(req.context);\n                var params = {};\n                if(!isNull(req.params)){\n                    var paramsTemplate = Template7.compile(req.params);\n                    params = paramsTemplate(req.context);\n                    try {\n                        params = eval(\"(\" + params + \")\");\n                    } catch (e) {\n                        console.error(e);\n                        throw new Error(\"Can not parse params to JSON. [\"+ req.id + \"].\");\n                    }\n                    if(req.method == \"GET\"){\n                        params = encodeJSON(params);\n                    }\n                }\n\n                ajax(url, req.method, params,\n                    function(data, status){\n                        data.$context = req.context;\n                        if(!isNull(req.tpl)){\n                            req.tpl.render(data, req.dom);\n                        }\n                    },\n                    function (xhr, status, error) {\n                        console.error(error);\n                        throw new Error(\"Error occurs when invoking request [\" + url + \"]\");\n\n                    }\n                );\n            };\n            this.init = function(){\n                var tplId = $(element).attr(ATTR_TPL_ID);\n                var method = $(element).attr(ATTR_METHOD);\n                if(!isNull(tplId)){\n                    req.tpl = engine.templates[tplId];\n                    if(isNull(req.tpl)){\n                        throw new Error(\"Undefined template [\" + tplId + \"].\");\n                    }\n                    $(element).attr(ATTR_REF,tplId);\n                }\n                if(!isNull(method)){\n                    req.method = method;\n                }\n                req.url = $(element).attr(ATTR_URL);\n                req.params = $(element).attr(ATTR_PARAMS);\n                req.dom = $(element);\n\n            };\n            this.init();\n        }\n\n        function Template(element){\n            var tpl = this;\n            this.id = null;\n            this.src = null;\n            //this.requests = [];\n            this.render = function (context, dom) {\n                var srcTemplate = Template7.compile(tpl.src);\n                var html = srcTemplate(context);\n                var els = $(html);\n                var reqdoms = els.filter(\"[\" + ATTR_URL + \"]\");\n                dom.append(els);\n\n                reqdoms.each(function () {\n                    var req = new Request(this);\n                    req.context = context;\n                    req.invoke();\n                });\n\n            };\n            this.init = function(){\n                tpl.id = $(element).attr(\"id\");\n                tpl.src = $(element).html();\n                if(isNull(tpl.id)){\n                    throw new Error(\"ID is undefined in template.\");\n                }\n            };\n            this.init();\n        }\n\n\n        this.requests = [];\n        this.templates = {};\n        this.invokeAll = function(){\n            for(var i = 0;i < engine.requests.length; i++){\n                var req = engine.requests[i];\n                req.invoke();\n            }\n        };\n\n        this._initTemplates = function(){\n            var ATTR_TEMPLATE7 = \"text/template7\";\n\n            $(\"script[type='\" + ATTR_TEMPLATE7 + \"']\").each(function(i) {\n                var template = new Template(this);\n                engine.templates[template.id] = template;\n            });\n\n        };\n        this._initRequests = function(){\n\n            $(\"[\" + ATTR_URL + \"]\").each(function() {\n                var request = new Request(this);\n                engine.requests.push(request);\n            });\n\n        };\n        this._initTemplates();\n        this._initRequests();\n        this.invokeAll();\n    }\n\n    var e7 = new Engine7();\n    return e7;\n\n})();\n\n//# sourceMappingURL=engine7.js.map\n"]}