{"version":3,"sources":["engine7.js"],"names":["window","Engine7","isNull","str","undefined","getArrayIndex","arr","e","i","length","encodeJSON","json","key","encodeURIComponent","randomString","len","chars","maxPos","pwd","charAt","Math","floor","random","Request","element","req","this","id","url","params","method","tpl","dom","context","onBeforeInvoke","onAfterInvoke","onInvokeError","handleSuccess","data","status","$context","render","handleError","xhr","error","console","Error","invoke","urlTemplate","Template7","compile","paramsTemplate","eval","options","type","dataType","success","$","ajax","done","engine","tasks","init","tplId","attr","ATTR_TPL_ID","ATTR_METHOD","ATTR_ID","templates","ATTR_REF","ATTR_URL","ATTR_PARAMS","identify","events","beforeInvoke","afterInvoke","invokeError","Template","src","onBeforeRender","onAfterRender","srcTemplate","html","els","append","reqdoms","filter","each","requests","completeCB","beforeRender","afterRender","Form","form","el","action","onBeforeSubmit","onSubmitBack","onSubmitError","putElJSON","name","value","split","node","shift","last","tmp","Array","isArray","push","toJSON","find","tag","tagName","val","is","submit","always","removeAttr","beforeSubmit","submitBack","submitError","ATTR_TEMPLATE7","ATTR_AJAX_FORM","forms","_invokeAll","count","complete","cb","_init","_initForms","reqId","formId","template","request","e7"],"mappings":"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","file":"engine7.min.js","sourcesContent":["/**\n * engine7 \n * \n * \n * https://github.com/jindong5210/engine7\n * \n * Copyright 2017, Jeffrey King\n * \n * Licensed under MIT\n * \n * Released on: May 9, 2017\n */\nwindow.Engine7 = (function() {\n    'use strict';\n\n    function isNull(str) {\n        return str === null || str === \"\" || str === undefined;\n    }\n\n    function getArrayIndex(arr,e) {\n        for(var i=0; i<arr.length; i++){\n            if(arr[i] == e){\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function encodeJSON(json){\n        for (var key in json) {\n            json[key] = encodeURIComponent(json[key]);\n        }\n        return json;\n    }\n\n    function randomString(len) {\n        len = len || 8;\n        var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var maxPos = chars.length;\n        var pwd = '';\n        for (var i = 0; i < len; i++) {\n            pwd += chars.charAt(Math.floor(Math.random() * maxPos));\n        }\n        return pwd;\n    }\n\n    function Engine7(){\n        var engine = this;\n\n        var ATTR_TEMPLATE7 = \"text/template7\";\n        var ATTR_ID = \"id\";\n        var ATTR_TPL_ID = \"data-tpl-id\";\n        var ATTR_URL = \"data-api-url\";\n        var ATTR_METHOD = \"data-api-method\";\n        var ATTR_PARAMS = \"data-api-param\";\n        var ATTR_REF = \"data-tpl-ref\";\n        var ATTR_AJAX_FORM = \"data-ajax-form\";\n\n        this.requests = {};\n        this.templates = {};\n        this.forms = {};\n        this.tasks = 0;\n        this.completeCB = null;\n        this.events = {\n            beforeInvoke : {},\n            afterInvoke : {},\n            beforeRender : {},\n            afterRender : {},\n            invokeError : {},\n            beforeSubmit : {},\n            submitBack : {},\n            submitError : {}\n        };\n\n        function Request(element){\n            var req = this;\n\n            this.id = null;\n            this.url = null;\n            this.params = null;\n            this.method = \"GET\";\n            this.tpl = null;\n            this.dom = null;\n            this.context = {};\n            this.onBeforeInvoke = null;\n            this.onAfterInvoke = null;\n            this.onInvokeError = null;\n\n            this.handleSuccess = function(data, status){\n                if(!isNull(req.onAfterInvoke)){\n                    req.onAfterInvoke(data, status, req);\n                }\n                data.$context = req.context;\n                if(!isNull(req.tpl)){\n                    req.tpl.render(data, req.dom);\n                }\n            };\n            this.handleError = function (xhr, status, error) {\n                if(!isNull(req.onInvokeError)){\n                    req.onInvokeError(xhr, status, error, req);\n                }else{\n                    console.error(error);\n                    throw new Error(\"Error occurs when invoking request [\" + req.url + \"]\");\n                }\n\n            };\n            this.invoke = function(){\n\n                var urlTemplate = Template7.compile(req.url);\n                var url = urlTemplate(req.context);\n                var params = {};\n                if(!isNull(req.params)){\n                    var paramsTemplate = Template7.compile(req.params);\n                    params = paramsTemplate(req.context);\n                    try {\n                        params = eval(\"(\" + params + \")\");\n                    } catch (e) {\n                        console.error(e);\n                        throw new Error(\"Can not parse params to JSON. [\"+ req.url + \"].\");\n                    }\n                    if(req.method == \"GET\"){\n                        params = encodeJSON(params);\n                    }\n                }\n                var options = {\n                    url : url,\n                    type : req.method,\n                    dataType: \"json\",\n                    data : params,\n                    success : req.handleSuccess,\n                    error : req.handleError\n                };\n\n                if(!isNull(req.onBeforeInvoke)){\n                    req.onBeforeInvoke(options, req);\n                }\n\n                $.ajax(options).done(function(){\n                    engine.tasks--;\n                });\n                engine.tasks ++;\n            };\n            this.init = function(){\n                var tplId = $(element).attr(ATTR_TPL_ID);\n                var method = $(element).attr(ATTR_METHOD);\n                var id = $(element).attr(ATTR_ID);\n                if(!isNull(tplId)){\n                    req.tpl = engine.templates[tplId];\n                    if(isNull(req.tpl)){\n                        throw new Error(\"Undefined template [\" + tplId + \"].\");\n                    }\n                    $(element).attr(ATTR_REF,tplId);\n                }\n                if(!isNull(method)){\n                    req.method = method;\n                }\n                if(isNull(id)){\n                    req.id = \"req-\" + randomString();\n                }\n                req.url = $(element).attr(ATTR_URL);\n                req.params = $(element).attr(ATTR_PARAMS);\n                req.dom = $(element);\n\n                var identify = engine.events.beforeInvoke[\"*\"] ? \"*\" : req.id;\n                req.onBeforeInvoke = engine.events.beforeInvoke[identify];\n\n                identify = engine.events.afterInvoke[\"*\"] ? \"*\" : req.id;\n                req.onAfterInvoke = engine.events.afterInvoke[identify];\n\n                identify = engine.events.invokeError[\"*\"] ? \"*\" : req.id;\n                req.onInvokeError = engine.events.invokeError[identify];\n\n            };\n            this.init();\n        }\n\n        function Template(element){\n            var tpl = this;\n\n            this.id = null;\n            this.src = null;\n            this.onBeforeRender = null;\n            this.onAfterRender = null;\n\n            this.render = function (context, dom) {\n\n                var srcTemplate = Template7.compile(tpl.src);\n\n                if(!isNull(tpl.onBeforeRender)){\n                    tpl.onBeforeRender(context,tpl);\n                }\n\n                var html = srcTemplate(context);\n                var els = $(html);\n                dom.append(els);\n\n                if(!isNull(tpl.onAfterRender)){\n                    tpl.onAfterRender(els,tpl);\n                }\n\n                var reqdoms = els.filter(\"[\" + ATTR_URL + \"]\");\n                reqdoms.each(function () {\n                    var req = new Request(this);\n                    req.context = context;\n                    req.invoke();\n                    engine.requests[req.id] = req;\n                });\n\n                if(engine.tasks === 1 && reqdoms.length === 0){\n                    engine.completeCB();\n                }\n\n            };\n            this.init = function(){\n                tpl.id = $(element).attr(\"id\");\n                tpl.src = $(element).html();\n                if(isNull(tpl.id)){\n                    throw new Error(\"ID is required on template.\");\n                }\n\n                var identify = engine.events.beforeRender[\"*\"] ? \"*\" : tpl.id;\n                tpl.onBeforeRender = engine.events.beforeRender[identify];\n\n                identify = engine.events.afterRender[\"*\"] ? \"*\" : tpl.id;\n                tpl.onAfterRender = engine.events.afterRender[identify];\n            };\n            this.init();\n        }\n\n        function Form(element) {\n            var form = this;\n            var INPUT_TYPE = [\"text\",\"email\",\"number\",\"hidden\",\"password\",\"checkbox\",\"radio\"];\n\n            this.id = null;\n            this.el = null;\n            this.action = null;\n            this.method = \"GET\";\n            this.onBeforeSubmit = null;\n            this.onSubmitBack = null;\n            this.onSubmitError = null;\n\n            this.putElJSON = function (json, name, value) {\n                var arr = name.split(/\\./);\n                while(arr.length > 1){\n                    var node = arr.shift();\n                    if(!json[node]){\n                        json[node] = {};\n                    }\n                    json = json[node];\n                }\n                var last = arr[arr.length - 1];\n                if(json[last] !== undefined){\n                    var tmp = json[last];\n                    if(!Array.isArray(json[last])){\n                        tmp = [json[last]];\n                    }\n                    tmp.push(value);\n                    json[last] = tmp;\n                }else{\n                    json[last] = value;\n                }\n            };\n\n            this.toJSON = function () {\n                var json = {};\n\n                $(element).find(\"input,textarea,select\").each(function () {\n                    var tag = this.tagName;\n                    var type = $(this).attr(\"type\");\n                    var name = $(this).attr(\"name\");\n                    var val = $(this).val();\n                    if(!name){\n                        return true;\n                    }\n                    if(tag === \"INPUT\" && (type === \"button\" || type === \"submit\") || type === \"reset\"){\n                        return true;\n                    }\n                    if(tag === \"INPUT\" && (type === \"checkbox\" || type === \"radio\")){\n                        if(!$(this).is(':checked')) {\n                            return true;\n                        }\n                    }\n                    form.putElJSON(json, name, val);\n                })\n                return json;\n            };\n            this.handleSuccess = function(data, status){\n                if(!isNull(form.onSubmitBack)){\n                    form.onSubmitBack(data, status, form);\n                }\n            };\n            this.handleError = function (xhr, status, error) {\n                if(!isNull(form.onSubmitError)){\n                    form.onSubmitError(xhr, status, error, form);\n                }else{\n                    console.error(error);\n                    throw new Error(\"Error occurs when submit form [\" + form.id + \"]\");\n                }\n\n            };\n            this.submit = function () {\n                var json = form.toJSON();\n                if(!isNull(form.onBeforeSubmit)){\n                    form.onBeforeSubmit(json, form);\n                }\n\n                var options = {\n                    url : form.action,\n                    type : form.method,\n                    dataType: \"json\",\n                    data : json,\n                    success : form.handleSuccess,\n                    error : form.handleError\n                };\n\n                $.ajax(options).always(function(){\n                    $(element).find(\"[type='submit']\").removeAttr(\"disabled\");\n                });\n            };\n            this.init = function () {\n                form.id = $(element).attr(\"id\");\n                form.action = $(element).attr(\"action\");\n                form.el = element;\n\n                if(isNull(form.id)){\n                    form.id = \"form-\" + randomString();\n                }\n                if(isNull(form.action)){\n                    throw new Error(\"Action is required on data-ajax-form.\");\n                }\n                var method = $(element).attr(\"method\");\n                if(!isNull(method)){\n                    form.method = method;\n                }\n                $(element).submit(function () {\n                    $(element).find(\"[type='submit']\").attr(\"disabled\",\"disabled\");\n                    form.submit();\n                    return false;\n                });\n\n                var identify = engine.events.beforeSubmit[form.id] ? form.id : \"*\";\n                form.onBeforeSubmit = engine.events.beforeSubmit[identify];\n\n                identify = engine.events.submitBack[form.id] ? form.id : \"*\";\n                form.onSubmitBack = engine.events.submitBack[identify];\n\n                identify = engine.events.submitError[form.id] ? form.id : \"*\";\n                form.onSubmitError = engine.events.submitError[identify];\n            };\n            this.init();\n        }\n\n        this._invokeAll = function(){\n            var count = 0;\n            for(var key in engine.requests){\n                var req = engine.requests[key];\n                req.invoke();\n                count ++;\n            }\n            if(count === 0){\n                engine.completeCB();\n            }\n        };\n\n        this.complete = function(cb){\n            engine._init();\n            engine.completeCB = function () {\n                engine._initForms();\n                if(cb){\n                    cb();\n                }\n            };\n            engine._invokeAll();\n        };\n\n        this.onBeforeRender = function(tplId, cb){\n            engine.events.beforeRender[tplId] = cb;\n        };\n\n        this.onAfterRender = function(tplId, cb){\n            engine.events.afterRender[tplId] = cb;\n        };\n\n        this.onBeforeInvoke = function(reqId, cb){\n            engine.events.beforeInvoke[reqId] = cb;\n        };\n\n        this.onAfterInvoke = function(reqId, cb){\n            engine.events.afterInvoke[reqId] = cb;\n        };\n\n        this.onInvokeError = function(reqId, cb){\n            engine.events.invokeError[reqId] = cb;\n        };\n\n        this.onBeforeSubmit = function (formId, cb) {\n            engine.events.beforeSubmit[formId] = cb;\n        };\n\n        this.onSubmitBack = function (formId, cb) {\n            engine.events.submitBack[formId] = cb;\n        };\n\n        this.onSubmitError = function (formId, cb) {\n            engine.events.submitError[formId] = cb;\n        };\n\n        this._init = function(){\n            $(\"script[type='\" + ATTR_TEMPLATE7 + \"']\").each(function() {\n                var template = new Template(this);\n                engine.templates[template.id] = template;\n            });\n\n            $(\"[\" + ATTR_URL + \"]\").each(function() {\n                var request = new Request(this);\n                engine.requests[request.id] = request;\n            });\n        };\n\n        this._initForms = function () {\n            $(\"[\" + ATTR_AJAX_FORM + \"]\").each(function() {\n                var form = new Form(this);\n                engine.forms[form.id] = form;\n            });\n        };\n\n    }\n\n    var e7 = new Engine7();\n    return e7;\n\n})();\n\n//# sourceMappingURL=engine7.js.map\n"]}