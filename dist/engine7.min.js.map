{"version":3,"sources":["engine7.js"],"names":["window","Engine7","isNull","str","undefined","encodeJSON","json","key","encodeURIComponent","Request","element","req","this","id","url","params","method","tpl","dom","context","handleSuccess","data","status","afterInvokeEventCB","engine","events","afterInvoke","$context","render","handleError","xhr","error","console","Error","errorEventCB","invoke","urlTemplate","Template7","compile","paramsTemplate","eval","e","options","type","dataType","success","beforeInvokeEventCB","beforeInvoke","$","ajax","done","tasks","init","tplId","attr","ATTR_TPL_ID","ATTR_METHOD","ATTR_ID","templates","ATTR_REF","ATTR_URL","ATTR_PARAMS","Template","src","srcTemplate","beforeRenderEventCB","beforeRender","html","els","append","afterRenderEventCB","afterRender","reqdoms","filter","each","length","complete","ATTR_TEMPLATE7","requests","invokeAll","i","cb","onBeforeRender","onAfterRender","onBeforeInvoke","reqId","onAfterInvoke","onError","_init","template","request","push","e7"],"mappings":"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","file":"engine7.min.js","sourcesContent":["/**\n * engine7 \n * \n * \n * https://github.com/jindong5210/engine7\n * \n * Copyright 2017, Jeffrey King\n * \n * Licensed under MIT\n * \n * Released on: March 28, 2017\n */\nwindow.Engine7 = (function() {\n    'use strict';\n\n    function isNull(str) {\n        return str === null || str === \"\" || str === undefined;\n    }\n\n    function encodeJSON(json){\n        for (var key in json) {\n            json[key] = encodeURIComponent(json[key]);\n        }\n        return json;\n    }\n\n\n    function Engine7(){\n        var engine = this;\n\n        var ATTR_TEMPLATE7 = \"text/template7\";\n        var ATTR_ID = \"id\";\n        var ATTR_TPL_ID = \"data-tpl-id\";\n        var ATTR_URL = \"data-api-url\";\n        var ATTR_METHOD = \"data-api-method\";\n        var ATTR_PARAMS = \"data-api-param\";\n        var ATTR_REF = \"data-tpl-ref\";\n\n        this.requests = [];\n        this.templates = {};\n        this.tasks = 0;\n        this.complete = null;\n        this.events = {\n            beforeInvoke : {},\n            afterInvoke : {},\n            beforeRender : {},\n            afterRender : {},\n            error : {}\n        };\n\n        function Request(element){\n            var req = this;\n            this.id = null;\n            this.url = null;\n            this.params = null;\n            this.method = \"GET\";\n            this.tpl = null;\n            this.dom = null;\n            this.context = {};\n            this.handleSuccess = function(data, status){\n                if(!isNull(req.id)){\n                    var afterInvokeEventCB = engine.events.afterInvoke[req.id];\n                    if(!isNull(afterInvokeEventCB)){\n                        afterInvokeEventCB(data, status, req);\n                    }\n                }\n                data.$context = req.context;\n                if(!isNull(req.tpl)){\n                    req.tpl.render(data, req.dom);\n                }\n            };\n            this.handleError = function (xhr, status, error) {\n                if(!isNull(req.id) && !isNull(engine.events.error[req.id])){\n                    var errorEventCB = engine.events.error[req.id];\n                    if(!isNull(errorEventCB)){\n                        errorEventCB(xhr, status, error, req);\n                    }\n                }else{\n                    console.error(error);\n                    throw new Error(\"Error occurs when invoking request [\" + req.url + \"]\");\n                }\n\n            };\n            this.invoke = function(){\n\n                var urlTemplate = Template7.compile(req.url);\n                var url = urlTemplate(req.context);\n                var params = {};\n                if(!isNull(req.params)){\n                    var paramsTemplate = Template7.compile(req.params);\n                    params = paramsTemplate(req.context);\n                    try {\n                        params = eval(\"(\" + params + \")\");\n                    } catch (e) {\n                        console.error(e);\n                        throw new Error(\"Can not parse params to JSON. [\"+ req.id + \"].\");\n                    }\n                    if(req.method == \"GET\"){\n                        params = encodeJSON(params);\n                    }\n                }\n                var options = {\n                    url : url,\n                    type : req.method,\n                    dataType: \"json\",\n                    data : params,\n                    success : req.handleSuccess,\n                    error : req.handleError\n                };\n                if(!isNull(req.id)){\n                    var beforeInvokeEventCB = engine.events.beforeInvoke[req.id];\n                    if(!isNull(beforeInvokeEventCB)){\n                        beforeInvokeEventCB(options, req);\n                    }\n                }\n\n                $.ajax(options).done(function(){\n                    engine.tasks--;\n                });\n                engine.tasks ++;\n            };\n            this.init = function(){\n                var tplId = $(element).attr(ATTR_TPL_ID);\n                var method = $(element).attr(ATTR_METHOD);\n                var id = $(element).attr(ATTR_ID);\n                if(!isNull(tplId)){\n                    req.tpl = engine.templates[tplId];\n                    if(isNull(req.tpl)){\n                        throw new Error(\"Undefined template [\" + tplId + \"].\");\n                    }\n                    $(element).attr(ATTR_REF,tplId);\n                }\n                if(!isNull(method)){\n                    req.method = method;\n                }\n                if(!isNull(id)){\n                    req.id = id;\n                }\n                req.url = $(element).attr(ATTR_URL);\n                req.params = $(element).attr(ATTR_PARAMS);\n                req.dom = $(element);\n\n            };\n            this.init();\n        }\n\n        function Template(element){\n            var tpl = this;\n            this.id = null;\n            this.src = null;\n\n\n            this.render = function (context, dom) {\n\n                var srcTemplate = Template7.compile(tpl.src);\n\n                var beforeRenderEventCB = engine.events.beforeRender[tpl.id];\n                if(!isNull(beforeRenderEventCB)){\n                    beforeRenderEventCB(context,tpl);\n                }\n\n                var html = srcTemplate(context);\n                var els = $(html);\n                dom.append(els);\n\n                var afterRenderEventCB = engine.events.afterRender[tpl.id];\n                if(!isNull(afterRenderEventCB)){\n                    afterRenderEventCB(els,tpl);\n                }\n\n                var reqdoms = els.filter(\"[\" + ATTR_URL + \"]\");\n                reqdoms.each(function () {\n                    var req = new Request(this);\n                    req.context = context;\n                    req.invoke();\n                });\n\n                if(engine.tasks === 1 && reqdoms.length === 0){\n                    engine.complete();\n                }\n\n            };\n            this.init = function(){\n                tpl.id = $(element).attr(\"id\");\n                tpl.src = $(element).html();\n                if(isNull(tpl.id)){\n                    throw new Error(\"ID is undefined in template.\");\n                }\n            };\n            this.init();\n        }\n\n        this.invokeAll = function(){\n            for(var i = 0;i < engine.requests.length; i++){\n                var req = engine.requests[i];\n                req.invoke();\n            }\n        };\n\n        this.complete = function(cb){\n            engine.invokeAll();\n            engine.complete = cb;\n        };\n\n        this.onBeforeRender = function(tplId, cb){\n            engine.events.beforeRender[tplId] = cb;\n        };\n\n        this.onAfterRender = function(tplId, cb){\n            engine.events.afterRender[tplId] = cb;\n        };\n\n        this.onBeforeInvoke = function(reqId, cb){\n            engine.events.beforeInvoke[reqId] = cb;\n        };\n\n        this.onAfterInvoke = function(reqId, cb){\n            engine.events.afterInvoke[reqId] = cb;\n        };\n\n        this.onError = function(reqId, cb){\n            engine.events.error[reqId] = cb;\n        };\n\n        this._init = function(){\n\n            $(\"script[type='\" + ATTR_TEMPLATE7 + \"']\").each(function(i) {\n                var template = new Template(this);\n                engine.templates[template.id] = template;\n            });\n\n            $(\"[\" + ATTR_URL + \"]\").each(function() {\n                var request = new Request(this);\n                engine.requests.push(request);\n            });\n        };\n\n        this._init();\n\n    }\n\n    var e7 = new Engine7();\n    return e7;\n\n})();\n\n//# sourceMappingURL=engine7.js.map\n"]}